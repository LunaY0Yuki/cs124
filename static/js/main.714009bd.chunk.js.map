{"version":3,"sources":["Priority.js","Row.js","ItemList.js","FilterDropUp.js","FilterButton.js","DeleteDropUp.js","DeleteButton.js","SortButton.js","Modal.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["Priority","props","displayed_priority","selectedPriority","ref","useRef","useEffect","checkIfClickedOutside","e","showDropDown","current","contains","target","onPriorityClicked","document","addEventListener","removeEventListener","className","onClick","changePriority","id","toString","Row","textarea_ref","useState","item_name","itemName","setItemName","isNewItem","focus","completed","onChange","onItemChanged","type","checked","value","disabled","onBlur","currentTarget","onItemDeleted","changeNewItemId","onKeyPress","key","preventDefault","newId","onItemAdded","priority","new_priority","ItemList","newItemId","setNewItemId","prioritySelected","setPrioritySelected","createRowComponent","item_id","renderedList","data","length","renderedData","filter","filterState","map","newItemData","push","FilterDropUp","optionClickedHelper","option_name","onFilterOpClicked","FilterButton","isMenuOpen","setIsMenuOpen","onToolClicked","showDropUp","closeDropUp","DeleteDropUp","onDeleteOpClicked","displayModal","deleteState","DeleteButton","SortButton","handleSortOptionClicked","option","onSortSelected","toggleDropDown","selectedSortOption","Modal","children","onClose","onOk","confirm_button_name","App","toolSelected","setToolSelected","setFilterState","setDeleteState","modalOn","setModalOn","showSortDropDown","setShowSortDropDown","handleToolSelected","tool_name","numOfItemsToDelete","toolOp","deleteOpName","onDeleteByCategory","toLowerCase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collectionName","InMemoryApp","sortOption","setSortOption","query","collection","orderBy","useCollection","docs","doc","itemID","field","newValue","update","delete","category","delete_query","where","get","then","querySnapshot","forEach","generateUniqueID","set","created","Timestamp","fromDate","Date","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialData","getElementById"],"mappings":"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","file":"static/js/main.714009bd.chunk.js","sourcesContent":["import './Priority.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction Priority(props){\n    let displayed_priority = \"–\";\n    if (props.selectedPriority === 1){\n        displayed_priority = \"L\";\n    } else if (props.selectedPriority === 2){\n        displayed_priority = \"M\";\n    } else if (props.selectedPriority === 3){\n        displayed_priority = \"H\";\n    }\n\n    const ref = useRef();\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.onPriorityClicked();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [props.showDropDown]);\n\n\n    return (\n        <div className=\"dropdown\" ref={ref}>\n            {props.showDropDown && <div className=\"dropdown-content\">\n                <button onClick = {() => props.changePriority(0)}\n                        className={props.selectedPriority === 0 ? \"none-selected\" : \"priority-option\"}>None {props.selectedPriority === 0 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(1)}\n                        className={props.selectedPriority === 1 ? \"low-selected\" : \"priority-option\"}>Low {props.selectedPriority === 1 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(2)}\n                        className={props.selectedPriority === 2 ? \"medium-selected\" : \"priority-option\"}>Medium {props.selectedPriority === 2 ? <span>&#10003;</span> : null}</button>\n                <button id=\"high-option\" onClick = {() => props.changePriority(3)}\n                        className={props.selectedPriority === 3 ? \"high-selected\" : \"priority-option\"}>High {props.selectedPriority === 3 ? <span>&#10003;</span> : null}</button>\n            </div>}\n            {props.showDropDown ? <button id=\"priority-outline\" className={\"dropbtn\"+props.selectedPriority.toString()} onClick={props.onPriorityClicked}>{displayed_priority}</button> :\n                <button className={\"dropbtn\"+props.selectedPriority.toString()} onClick={props.onPriorityClicked}>{displayed_priority}</button>}\n        </div>\n    );\n}\n\nexport default Priority;","import {useEffect, useRef, useState} from \"react\";\nimport './Row.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Priority from \"./Priority\";\n\nfunction Row(props){\n    const textarea_ref = useRef(null);\n    const [itemName, setItemName] = useState(props.item_name);\n\n    function handleKeypress(e) {\n        //it triggers by pressing the enter key\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            let newId = props.onItemAdded();\n            props.changeNewItemId(newId);\n        }\n    };\n\n    useEffect(() => {\n        // we only want to focus on the text area if it's a new item\n        if (props.isNewItem) {\n            textarea_ref.current.focus();\n        }\n    });\n\n    return (\n        <div id={props.id} className={props.completed ? \"task-item-completed\" : \"task-item-uncompleted\"}>\n            <input onChange={() => {\n                props.onItemChanged(props.id, \"completed\", !props.completed)\n            }} type=\"checkbox\" className=\"check-complete\" checked={props.completed}/>\n            <TextareaAutosize className=\"item-name\" value={itemName}\n                              onChange={(e) => setItemName(e.target.value)}\n                              disabled={props.completed}\n                              onBlur={(e) => {\n                                  // delete an item if its name is empty and the user clicks out of it\n                                  if (e.currentTarget.value === \"\") {\n                                      props.onItemDeleted(props.id);\n                                  }\n\n                                  if (props.isNewItem){\n                                      // when we click out of a new item\n                                      // item list should forget that this row is the newly added item\n                                      props.changeNewItemId(null);\n                                  }\n\n                                  props.onItemChanged(props.id, \"item_name\", e.target.value);\n                              }}\n                              onKeyPress={handleKeypress}\n                              ref={textarea_ref}\n            />\n            <Priority selectedPriority={props.priority}\n                      showDropDown={props.showDropDown}\n                      onPriorityClicked={props.onPriorityClicked}\n                      changePriority={(new_priority) => {\n                          props.onItemChanged(props.id, \"priority\", new_priority);\n                          props.onPriorityClicked();\n                      }\n                      }\n            />\n        </div>\n    );\n}\n\nexport default Row;","import './ItemList.css';\nimport Row from'./Row.js';\nimport {useState} from \"react\";\n\n\n// Define the List component that contain all the items\nfunction ItemList(props){\n    const [newItemId, setNewItemId] = useState(null);\n    const [prioritySelected, setPrioritySelected] = useState(null);\n\n    function handlePriorityDropDown(item_id){\n        // if you click on the same button twice, it will deselect it. will also toggle priority button and their dropdowns\n        if (prioritySelected === item_id){\n            setPrioritySelected(null);\n        } else {\n            setPrioritySelected(item_id);\n        }\n    }\n\n    function createRowComponent(e){\n        return <Row key={e.id} id={e.id} item_name={e.item_name}\n             completed={e.completed}\n             priority={e.priority}\n             showDropDown={e.id === prioritySelected}\n             onPriorityClicked={() => handlePriorityDropDown(e.id)}\n             onItemChanged={props.onItemChanged}\n             onItemDeleted={props.onItemDeleted}\n             onItemAdded={props.onItemAdded}\n             isNewItem={e.id === newItemId}\n             changeNewItemId={setNewItemId}\n        />\n    }\n\n    let renderedList = <p id=\"no-items\">No items to do.</p>;\n\n    if (props.data.length > 0) {\n        let renderedData = props.data.filter((e) => e.id !== newItemId);  // when props.filterState === \"all\", so we show all\n\n        if (props.filterState === \"Completed\") {\n            renderedData = props.data.filter((e) => e.completed);\n        } else if (props.filterState === \"Uncompleted\") {\n            renderedData = props.data.filter((e) => !e.completed);\n        }\n\n        // create the rows for items whose id does not match newItemId\n        renderedList = renderedData.map((e) => createRowComponent(e));\n\n        if (newItemId){\n            // filter out the new item based on newItemId\n            // filter returns an array (it should be an array with length 1), so we only want the first one\n            let newItemData = props.data.filter((e) => e.id === newItemId);\n            if (newItemData.length === 1){\n                // append new item to the rendered list so it appears at the end\n                renderedList.push(createRowComponent(newItemData[0]));\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <div id=\"item_list\">\n                {renderedList}\n            </div>\n            <button id=\"add\" type=\"button\" onClick={()  => {\n                let newId = props.onItemAdded();\n                setNewItemId(newId);\n            }}>+</button>\n        </div>\n    );\n}\n\nexport default ItemList;","import './ToolsButton.css';\n\nfunction FilterDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onFilterOpClicked(option_name);\n    }\n\n    return (\n        <div className=\"dropup-content\">\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.filterState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.filterState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default FilterDropUp;","import './ToolsButton.css';\nimport FilterDropUp from \"./FilterDropUp.js\";\nimport { useEffect, useRef, useState } from \"react\"\n\nfunction FilterButton(props){\n    const ref = useRef()\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (isMenuOpen && ref.current && !ref.current.contains(e.target)) {\n                setIsMenuOpen(false)\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [isMenuOpen])\n    return (\n        <div className=\"dropup\">\n            <button className=\"accent\" id=\"filter-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">filter_alt</i>\n            </button>\n            {props.showDropUp && <FilterDropUp onFilterOpClicked={props.onFilterOpClicked}\n                                               filterState = {props.filterState}\n                                               closeDropUp = {props.closeDropUp}/>}\n        </div>\n    );\n}\n\nexport default FilterButton;","import './ToolsButton.css';\n\nfunction DeleteDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onDeleteOpClicked(option_name);\n        props.displayModal();\n    }\n\n    return (\n        <div className=\"dropup-content\">\n\n            <button onClick={() => optionClickedHelper(\"All\")}>\n                All {props.deleteState === \"All\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.deleteState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.deleteState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default DeleteDropUp;","import './ToolsButton.css';\nimport DeleteDropUp from './DeleteDropUp.js';\n\nfunction DeleteButton(props){\n    return (\n        <div className=\"dropup\">\n            <button className=\"accent\" id=\"delete-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">delete_outline</i>\n            </button>\n            {props.showDropUp && <DeleteDropUp displayModal={props.displayModal}\n                                               deleteState={props.deleteState}\n                                               onDeleteOpClicked={props.onDeleteOpClicked}/>}\n        </div>\n    );\n}\n\nexport default DeleteButton;","import './SortButton.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction SortButton(props){\n    const ref = useRef();\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.toggleDropDown();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [props.showDropDown]);\n\n    function handleSortOptionClicked(option){\n        props.onSortSelected(option);\n        props.toggleDropDown();\n    }\n\n    return (\n        <div className=\"sort-dropdown\" ref={ref}>\n            <button id={props.showDropDown ? \"sort-icon-outlined\": \"sort-icon\"} onClick={props.toggleDropDown}><i className=\"material-icons-outlined em2\">sort</i></button>\n            {props.showDropDown && <div className=\"sort-dropdown-content\">\n                <button onClick={() => handleSortOptionClicked(\"item_name\")}>By Name {props.selectedSortOption === \"item_name\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"created\")}>By Date {props.selectedSortOption === \"created\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"priority\")} id=\"last-option\">By Priority {props.selectedSortOption === \"priority\" ? <span>&#10003;</span> : null} </button>\n            </div>}\n        </div>\n    );\n}\n\nexport default SortButton;","import './Modal.css';\n\nfunction Modal(props){\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                {props.children}\n                <div id=\"modal-response\">\n                    <button type=\"button\" onClick={props.onClose}>\n                     Cancel\n                    </button>\n                    <button id=\"confirm-button\" type=\"button\" onClick={() =>  {\n                        props.onOk();\n                        props.onClose();\n                    }}>\n                        {props.confirm_button_name}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","import './App.css';\nimport ItemList from \"./ItemList.js\";\nimport FilterButton from \"./FilterButton.js\";\nimport DeleteButton from \"./DeleteButton.js\";\nimport SortButton from \"./SortButton.js\";\nimport Modal from \"./Modal.js\";\nimport {useState, useEffect, useRef} from \"react\";\n\nfunction App(props) {\n    const [toolSelected, setToolSelected] = useState(null);  // for the drop-up for filter and delete\n    const [filterState, setFilterState] = useState(\"All\");\n    const [deleteState, setDeleteState] = useState(null);\n    const [modalOn, setModalOn] = useState(null);\n    const [showSortDropDown, setShowSortDropDown] = useState(false);\n\n\n    function handleToolSelected(tool_name){\n        // if you click on the same tool twice, it will deselect it\n        if (toolSelected === tool_name){\n            setToolSelected(null);\n        } else {\n            setToolSelected(tool_name);\n        }\n    }\n\n    function handleFilterSelected(toolOp){\n        if (filterState === toolOp){\n            setFilterState(\"All\");\n        } else {\n            setFilterState(toolOp)\n        }\n    }\n\n    const ref = useRef();\n            useEffect(() => {\n                const checkIfClickedOutside = e => {\n                    // If the menu is open and the clicked target is not within the menu,\n                    // then close the menu\n                    if (toolSelected && ref.current && !ref.current.contains(e.target)) {\n                        setToolSelected(null);\n                    }\n                }\n\n                document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n                return () => {\n                    // Cleanup the event listener\n                    document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n                }\n            }, [toolSelected]);\n\n    let numOfItemsToDelete = props.data.length;   // if we are deleting all items\n    if (deleteState === \"Completed\") {\n        numOfItemsToDelete = props.data.filter((e) => e.completed).length;\n    } else if (deleteState === \"Uncompleted\") {\n        numOfItemsToDelete = props.data.filter((e) => !e.completed).length;\n    }\n\n    return (\n      <div id=\"content\">\n        <h1 className=\"accent\">To-Do List</h1>\n        {props.data.length > 0 && <SortButton\n                                    showDropDown = {showSortDropDown}\n                                    toggleDropDown = {() => setShowSortDropDown(!showSortDropDown)}\n                                    onSortSelected = {props.onSortSelected}\n                                    selectedSortOption = {props.selectedSortOption}\n                                    />}\n        {props.data.length > 0 && <div id=\"column-labels\"><span>Item Name</span> <span>Priority</span></div>}\n        <ItemList {...props} filterState = {filterState}/>\n        <div id=\"tools\" ref={ref}>\n            <FilterButton onToolClicked={() => {handleToolSelected(\"filter\")}}\n                          showDropUp = {\"filter\" === toolSelected}\n                          onFilterOpClicked={handleFilterSelected}\n                          filterState = {filterState}\n                          closeDropUp = {() => setToolSelected(null)}\n            />\n            <DeleteButton onToolClicked={() => {handleToolSelected(\"delete\")}}\n                          showDropUp = {\"delete\" === toolSelected}\n                          deleteState = {deleteState}\n                          onDeleteOpClicked = {(deleteOpName) => setDeleteState(deleteOpName)}\n                          displayModal={() => {setModalOn(true)}}\n            />\n        </div>\n          {modalOn && <Modal\n                             confirm_button_name = \"Delete\"\n                             onClose = {() => {\n                                 setDeleteState(null);\n                                 setModalOn(false);  // hide the modal\n                             }}\n                             onOk = {() => {\n                                 props.onDeleteByCategory(deleteState);\n                                 setToolSelected(null);   //  reset the toolSelected state, so that the dropUp goes away\n                             }\n                             }>\n              <p>Are you sure that you want to delete <b>all {numOfItemsToDelete.toString()} {deleteState !== \"All\" ? deleteState.toLowerCase() + \" \": \"\"} </b>tasks?</p>\n          </Modal>}\n      </div>\n  );\n}\n\nexport default App;\n","import {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport App from \"./App.js\";\n\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCYBi2G8RnkLs2Bzj_XDLjYPylF2oRhq5Y\",\n    authDomain: \"cs124-lab-celine-yuki.firebaseapp.com\",\n    projectId: \"cs124-lab-celine-yuki\",\n    storageBucket: \"cs124-lab-celine-yuki.appspot.com\",\n    messagingSenderId: \"2120607993\",\n    appId: \"1:2120607993:web:d5d647b2b43f3c7fd95a28\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nconst collectionName = \"todo-list-2\";\n\nfunction InMemoryApp(props) {\n    const [sortOption, setSortOption] = useState(null);\n    let query = db.collection(collectionName);\n    if (sortOption){\n        if (sortOption === \"priority\"){\n            // because our priority has 4 as the highest priority, need to sort in descending order\n            query = query.orderBy(sortOption, \"desc\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n    const [value, loading, error] = useCollection(query);\n\n\n    let data = [];\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    // function handleItemChanged(itemID, field, newValue){\n    //         setData(data.map(\n    //             item => item.id !==itemID\n    //                 ? item\n    //                 : {...item, [field]: newValue}));\n    // }\n\n    function handleItemChanged(itemID, field, newValue) {\n        const doc = db.collection(collectionName).doc(itemID);\n        doc.update({\n            [field]: newValue,\n        })\n    }\n\n    // function handleItemDeleted(itemID) {\n    //     setData(data.filter((item) => item.id !== itemID));\n    // }\n\n    function handleItemDeleted(itemID) {\n        db.collection(collectionName).doc(itemID).delete();\n    }\n\n    function handleItemCategoryDeleted(category) {\n        let delete_query = null;\n        // delete the item based on the category they are in\n        if (category === \"Completed\"){\n            delete_query = db.collection(collectionName).where('completed','==',true);\n        } else if (category === \"Uncompleted\") {\n            delete_query = db.collection(collectionName).where('completed','==',false);\n        } else if (category === \"All\") {\n            delete_query = db.collection(collectionName);\n        }\n\n        delete_query.get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n    // function handleItemCategoryDeleted(category) {\n    //     // delete the item based on the category they are in\n    //     if (category === \"Completed\"){\n    //         setData(data.filter((item) => item.completed === false));\n    //     } else if (category === \"Uncompleted\") {\n    //         setData(data.filter((item) => item.completed === true));\n    //     } else if (category === \"All\") {\n    //         setData([]);\n    //     }\n    // }\n\n    // function handleItemAdded(){\n    //     let newId = generateUniqueID();\n    //     setData(data.concat([{id: newId, name: \"\", completed: false}]));\n    //     return newId;\n    // }\n\n    function handleItemAdded() {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            item_name: \"\",\n            completed: false,\n            priority: 0,\n            created: firebase.firestore.Timestamp.fromDate(new Date()),\n        })\n        return newId;\n    }\n\n    function handleSortSelected(option){\n        // if you click on the same option twice, it will undo the sort\n        if (sortOption === option){\n            setSortOption(null);\n        } else {\n            setSortOption(option);\n        }\n    }\n\n    return (<App data={data} onItemChanged={handleItemChanged}\n                 onItemDeleted={handleItemDeleted}\n                 onDeleteByCategory={handleItemCategoryDeleted}\n                 onItemAdded={handleItemAdded}\n                 onSortSelected={handleSortSelected}\n                 selectedSortOption={sortOption}/>\n    );\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nlet initialData = [];\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <InMemoryApp initialData={initialData} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}