{"version":3,"sources":["Priority.js","Row.js","ItemList.js","FilterDropUp.js","FilterButton.js","DeleteDropUp.js","DeleteButton.js","SortButton.js","Modal.js","Sidebar.js","SelectionMaintainingInput.js","Header.js","ShareList.js","App.js","InMemoryApp.js","AppWrapper.js","reportWebVitals.js","index.js"],"names":["Priority","props","displayed_priority","aria_priority","selectedPriority","ref","useRef","useEffect","checkIfClickedOutside","e","showDropDown","current","contains","target","onPriorityClicked","document","addEventListener","window","removeEventListener","className","aria-label","id","toString","onClick","style","top","rowYpos","changePriority","Row","textarea_ref","useState","item_name","itemName","setItemName","editMode","setEditMode","isNewItem","focus","completed","onChange","onItemChanged","type","checked","value","disabled","onFocus","onBlur","changeNewItemId","currentTarget","onItemDeleted","onKeyPress","key","preventDefault","newId","onItemAdded","getBoundingClientRect","priority","new_priority","ItemList","newItemId","setNewItemId","prioritySelected","setPrioritySelected","createRowComponent","item_id","renderedList","data","length","renderedData","filter","filterState","map","newItemData","push","onScroll","FilterDropUp","optionClickedHelper","option_name","onFilterOpClicked","closeDropUp","FilterButton","isMenuOpen","setIsMenuOpen","onToolClicked","showDropUp","DeleteDropUp","onDeleteOpClicked","displayModal","deleteState","DeleteButton","SortButton","handleSortOptionClicked","option","onSortSelected","toggleDropDown","selectedSortOption","Modal","children","Sidebar","displayIndex","setDisplayIndex","isDesktop","useMediaQuery","minWidth","updateDisplayIndex","change_by","list_data","maxToDisplay","handleCreateNewList","collapsed","newListId","onListAdded","onListSelected","handleDeleteOnClick","evt","list_id","stopPropagation","curr_list_id","email","onListDeleted","setCollapseState","displayed_list","slice","iconShape","icon","collaborators","list_name","tabIndex","auth","signOut","SelectionMaintainingInput","rest","cursor","setCursor","input","setSelectionRange","selectionStart","Header","curr_list_is_sharable","onShareList","displayOwnerEmail","ownerEmail","curr_list_name","onListNameChanged","blur","Collaborator","user_email","is_owner","onRemoveCollaborator","ShareList","emailName","setEmailName","placeholder","onAddCollaborator","curr_list_collaborators","onClose","App","toolSelected","setToolSelected","setFilterState","setDeleteState","collapseState","modalOn","setModalOn","shareModalOn","setShareModalOn","showSortDropDown","setShowSortDropDown","isMobile","maxWidth","isLandscape","maxHeight","orientation","handleToolSelected","tool_name","numOfItemsToDelete","numOfListToDisplay","deleteOpName","toLowerCase","onDeleteByCategory","collectionName","InMemoryApp","sortOption","setSortOption","overall_query","db","collection","where","useCollection","overall_value","overall_loading","overall_error","console","log","all_lists_id","docs","doc","currentList","setCurrentList","query","orderBy","loading","error","curr_list_array","curr_list","owner","itemID","field","newValue","update","delete","category","forEach","generateUniqueID","set","created","firebase","firestore","Timestamp","fromDate","Date","listId","collaborator_email","FieldValue","arrayUnion","arrayRemove","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","googleProvider","GoogleAuthProvider","SignIn","signInWithPopup","AppWrapper","useAuthState","user","metadata","creationTime","lastSignInTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3399300.chunk.js","sourcesContent":["import './Priority.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction Priority(props){\n    let displayed_priority = \"–\";\n    let aria_priority = \"No priority selected.\";  // Determine how voiceover should describe the priority button\n    if (props.selectedPriority === 1){\n        displayed_priority = \"L\";\n        aria_priority = \"Low priority.\";\n    } else if (props.selectedPriority === 2){\n        displayed_priority = \"M\";\n        aria_priority = \"Medium priority.\";\n    } else if (props.selectedPriority === 3){\n        displayed_priority = \"H\";\n        aria_priority = \"High priority.\";\n    }\n\n    const ref = useRef();  // create a ref to the priority's drop down selector\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.onPriorityClicked();\n            }\n        }\n        document.addEventListener(\"mousedown\", checkIfClickedOutside);\n\n        // if the window size has changed, close the dropdown\n        window.addEventListener('resize', () => {\n            if (props.showDropDown) {\n                props.onPriorityClicked();\n            }\n        });\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n            window.removeEventListener('resize', () => {\n                if (props.showDropDown) {\n                    props.onPriorityClicked();\n                }\n            });\n        }\n    });\n\n\n    return (\n        <div className=\"dropdown\" ref={ref}>\n            {props.showDropDown ? <button aria-label={aria_priority} id=\"priority-outline\"\n                                          className={\"dropbtn\"+props.selectedPriority.toString()}\n                                          onClick={props.onPriorityClicked}>{displayed_priority}</button> :\n                <button aria-label={aria_priority}\n                        className={\"dropbtn\"+props.selectedPriority.toString()}\n                        onClick={props.onPriorityClicked}>{displayed_priority}</button>}\n            {props.showDropDown && <div className=\"dropdown-content\" style={{top: props.rowYpos}}>\n                <button onClick = {() => props.changePriority(0)}\n                        aria-label=\"Priority option: None\"\n                        className={props.selectedPriority === 0 ? \"none-selected\" : \"priority-option\"}>None {props.selectedPriority === 0 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(1)}\n                        aria-label=\"Priority option: Low\"\n                        className={props.selectedPriority === 1 ? \"low-selected\" : \"priority-option\"}>Low {props.selectedPriority === 1 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(2)}\n                        aria-label=\"Priority option: Medium\"\n                        className={props.selectedPriority === 2 ? \"medium-selected\" : \"priority-option\"}>Medium {props.selectedPriority === 2 ? <span>&#10003;</span> : null}</button>\n                <button id=\"high-option\" onClick = {() => props.changePriority(3)}\n                        aria-label=\"Priority option: High\"\n                        className={props.selectedPriority === 3 ? \"high-selected\" : \"priority-option\"}>High {props.selectedPriority === 3 ? <span>&#10003;</span> : null}</button>\n            </div>}\n        </div>\n    );\n}\n\nexport default Priority;","import {useEffect, useRef, useState} from \"react\";\nimport './Row.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Priority from \"./Priority\";\n\nfunction Row(props){\n    const textarea_ref = useRef(null);\n    const [itemName, setItemName] = useState(props.item_name);\n    const [editMode, setEditMode] = useState(false);\n\n    function handleKeypress(e) {\n        //it triggers by pressing the enter key\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            let newId = props.onItemAdded();\n            props.changeNewItemId(newId);\n        }\n    };\n\n    useEffect(() => {\n        // we only want to focus on the text area if it's a new item\n        if (props.isNewItem) {\n            textarea_ref.current.focus();\n        }\n\n        // to sync up changes in firestore to local (when someone is editing the item from another window)\n        if (itemName !== props.item_name && !editMode) {\n            setItemName(props.item_name);\n        }\n    }, [props.item_name, editMode, props.isNewItem, itemName]);\n\n    return (\n        <div id={props.id} className={props.completed ? \"task-item-completed\" : \"task-item-uncompleted\"}>\n            <input aria-label=\"Click or press space bar to check/uncheck item.\" onChange={() => {\n                props.onItemChanged(props.id, \"completed\", !props.completed)\n            }} type=\"checkbox\" className=\"check-complete\" checked={props.completed}/>\n            <TextareaAutosize aria-label=\"Item name text box.\"\n                              className=\"item-name\" value={itemName}\n                              onChange={(e) => setItemName(e.target.value)}\n                              disabled={props.completed}\n                              onFocus={() => {\n                                  if (!editMode) {\n                                      setEditMode(true);\n                                  }\n                              }}\n                              onBlur={(e) => {\n\n                                  if (props.isNewItem){\n                                      // when we click out of a new item\n                                      // item list should forget that this row is the newly added item\n                                      props.changeNewItemId(null);\n                                  }\n                                  setEditMode(false);  // because we click out of the textbox, no longer in edit mode\n                                  if (e.currentTarget.value === \"\") {\n                                      // delete an item if its name is empty and the user clicks out of it\n                                      props.onItemDeleted(props.id);\n                                  }\n                                  else {\n                                      props.onItemChanged(props.id, \"item_name\", e.target.value);\n                                  }\n                              }}\n                              onKeyPress={handleKeypress}\n                              ref={textarea_ref}\n            />\n            <Priority\n                rowYpos = {textarea_ref.current ? textarea_ref.current.getBoundingClientRect()[\"y\"] : 0}\n                selectedPriority={props.priority}\n                      showDropDown={props.showDropDown}\n                      onPriorityClicked={props.onPriorityClicked}\n                      changePriority={(new_priority) => {\n                          props.onItemChanged(props.id, \"priority\", new_priority);\n                          props.onPriorityClicked();\n                      }\n                      }\n            />\n        </div>\n    );\n}\n\nexport default Row;","import './ItemList.css';\nimport Row from'./Row.js';\nimport {useState} from \"react\";\n\n\n// Define the List component that contain all the items\nfunction ItemList(props){\n    const [newItemId, setNewItemId] = useState(null);\n    const [prioritySelected, setPrioritySelected] = useState(null);\n\n    function handlePriorityDropDown(item_id){\n        // if you click on the same button twice, it will deselect it. will also toggle priority button and their dropdowns\n        if (prioritySelected === item_id){\n            setPrioritySelected(null);\n        } else {\n            setPrioritySelected(item_id);\n        }\n    }\n\n    function createRowComponent(e){\n        return <Row key={e.id} id={e.id} item_name={e.item_name}\n             completed={e.completed}\n             priority={e.priority}\n             showDropDown={e.id === prioritySelected}\n             onPriorityClicked={() => handlePriorityDropDown(e.id)}\n             onItemChanged={props.onItemChanged}\n             onItemDeleted={props.onItemDeleted}\n             onItemAdded={props.onItemAdded}\n             isNewItem={e.id === newItemId}\n             changeNewItemId={setNewItemId}\n        />\n    }\n\n    let renderedList = <p id=\"no-items\">No items to do.</p>;\n\n    if (props.data.length > 0) {\n        let renderedData = props.data.filter((e) => e.id !== newItemId);  // when props.filterState === \"all\", so we show all\n\n        if (props.filterState === \"Completed\") {\n            renderedData = props.data.filter((e) => e.completed);\n        } else if (props.filterState === \"Uncompleted\") {\n            renderedData = props.data.filter((e) => !e.completed);\n        }\n\n        // create the rows for items whose id does not match newItemId\n        renderedList = renderedData.map((e) => createRowComponent(e));\n\n        if (newItemId){\n            // filter out the new item based on newItemId\n            // filter returns an array (it should be an array with length 1), so we only want the first one\n            let newItemData = props.data.filter((e) => e.id === newItemId);\n            if (newItemData.length === 1){\n                // append new item to the rendered list so it appears at the end\n                renderedList.push(createRowComponent(newItemData[0]));\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <div id=\"item_list\" onScroll={() => setPrioritySelected(null)}>\n                {renderedList}\n            </div>\n            <button aria-label=\"Add a new item to this list.\" id=\"add\" type=\"button\" onClick={()  => {\n                let newId = props.onItemAdded();\n                setNewItemId(newId);\n            }}>+</button>\n        </div>\n    );\n}\n\nexport default ItemList;","import './ToolsButton.css';\n\nfunction FilterDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onFilterOpClicked(option_name);\n        props.closeDropUp();\n    }\n\n    return (\n        <div className=\"dropup-content\">\n            <button onClick={() => optionClickedHelper(\"All\")}>\n                All {props.filterState === \"All\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.filterState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.filterState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default FilterDropUp;","import './ToolsButton.css';\nimport FilterDropUp from \"./FilterDropUp.js\";\nimport { useEffect, useRef, useState } from \"react\"\n\nfunction FilterButton(props){\n    const ref = useRef()\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (isMenuOpen && ref.current && !ref.current.contains(e.target)) {\n                setIsMenuOpen(false);\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [isMenuOpen])\n    return (\n        <div className=\"dropup\">\n            <button aria-label=\"Filter\" className=\"accent\" id=\"filter-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">filter_alt</i>\n            </button>\n            {props.showDropUp && <FilterDropUp onFilterOpClicked={props.onFilterOpClicked}\n                                               filterState = {props.filterState}\n                                               closeDropUp = {props.closeDropUp}/>}\n        </div>\n    );\n}\n\nexport default FilterButton;","import './ToolsButton.css';\n\nfunction DeleteDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onDeleteOpClicked(option_name);\n        props.displayModal();\n        props.closeDropUp();\n    }\n\n    return (\n        <div className=\"dropup-content\">\n\n            <button onClick={() => optionClickedHelper(\"All\")}>\n                All {props.deleteState === \"All\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.deleteState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.deleteState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default DeleteDropUp;","import './ToolsButton.css';\nimport DeleteDropUp from './DeleteDropUp.js';\n\nfunction DeleteButton(props){\n    return (\n        <div className=\"dropup\">\n            <button aria-label=\"Delete\" className=\"accent\" id=\"delete-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">delete_outline</i>\n            </button>\n            {props.showDropUp && <DeleteDropUp displayModal={props.displayModal}\n                                               deleteState={props.deleteState}\n                                               closeDropUp={props.closeDropUp}\n                                               onDeleteOpClicked={props.onDeleteOpClicked}/>}\n        </div>\n    );\n}\n\nexport default DeleteButton;","import './SortButton.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction SortButton(props){\n    const ref = useRef();  // create a ref for the sort drop down selector\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.toggleDropDown();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    });\n\n    function handleSortOptionClicked(option){\n        props.onSortSelected(option);\n        props.toggleDropDown();\n    }\n\n    return (\n        <div className=\"sort-dropdown\" ref={ref}>\n            <button id={props.showDropDown ? \"sort-icon-outlined\": \"sort-icon\"} onClick={props.toggleDropDown}><i className=\"material-icons-outlined em2\">sort</i></button>\n            {props.showDropDown && <div className=\"sort-dropdown-content\">\n                <button onClick={() => handleSortOptionClicked(\"created\")}>By Date {props.selectedSortOption === \"created\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"item_name\")}>By Name {props.selectedSortOption === \"item_name\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"priority\")} id=\"last-option\">By Priority {props.selectedSortOption === \"priority\" ? <span>&#10003;</span> : null} </button>\n            </div>}\n        </div>\n    );\n}\n\nexport default SortButton;","import './Modal.css';\n\nfunction Modal(props){\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","import {ProSidebar, Menu, MenuItem, SidebarContent, SidebarFooter} from 'react-pro-sidebar';\nimport {MdLogout, MdOutlinePlaylistAdd} from \"react-icons/md\";\nimport {FaAngleUp, FaAngleDown} from \"react-icons/fa\";\nimport {TiDelete} from \"react-icons/ti\";\nimport './Sidebar.scss';\nimport { useEffect, useRef, useState} from \"react\";\nimport { useMediaQuery } from 'react-responsive';\nimport {RiUserSharedLine} from \"react-icons/all\";\n\nfunction Sidebar(props){\n    const ref = useRef();\n    \n    const [displayIndex, setDisplayIndex] = useState(0);\n    const isDesktop = useMediaQuery({minWidth: 992});\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if ((!props.collapsed) && ref.current && !ref.current.contains(e.target)) {\n                props.setCollapseState(true);\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    });\n\n    // update what lists actually get displayed in the sidebar\n    function updateDisplayIndex(change_by){\n        if ((props.list_data.length > props.maxToDisplay) &&\n            !(displayIndex === 0 && change_by < 0) &&\n            !(displayIndex === props.list_data.length - props.maxToDisplay && change_by > 0)){\n            setDisplayIndex(displayIndex + change_by);\n        }\n    }\n\n    function handleCreateNewList(){\n        if (isDesktop || !props.collapsed) {\n            let newListId = props.onListAdded();  // create a new Untitled List in firestore\n            // show the new list\n            props.onListSelected(newListId);\n            // \"scroll\" to the bottom of the list in the side bar to display the new list\n            if (props.list_data.length > props.maxToDisplay) {\n                setDisplayIndex(props.list_data.length - props.maxToDisplay + 1);\n            }\n        }\n    }\n\n\n    function handleDeleteOnClick(evt, list_id){\n            // stop propagating the onClick to parent\n            evt.stopPropagation();\n\n            // if we are currently displaying the list that we are deleting\n            //   the app will show the default list\n            if (props.curr_list_id === list_id) {\n                props.onListSelected(\"default-list-\" + props.email);\n            }\n\n            props.onListDeleted(list_id);\n\n            // move back one index\n            updateDisplayIndex(-1);\n    }\n    \n    // get the subset of list name that we will display\n    const displayed_list = props.list_data.slice(displayIndex, displayIndex + props.maxToDisplay);\n\n    return (\n        <ProSidebar collapsed={props.collapsed} onClick={() => {\n            if (!isDesktop) {\n                props.setCollapseState(false);\n            }\n        }} ref={ref}>\n            <SidebarContent>\n            <Menu iconShape=\"square\">\n                <MenuItem aria-label=\"Add a new list\" id=\"add-new-list\" icon={<MdOutlinePlaylistAdd />}\n                onKeyPress={(evt)=> {\n                    // support ENTER key for keyboard control\n                    if (evt.key === \"Enter\"){\n                        handleCreateNewList();\n                    }\n               }}\n                onClick={() => handleCreateNewList()} >New List</MenuItem>\n                <MenuItem\n                    aria-label=\"Scroll Up\" id=\"scroll-up\"\n                    // if the user is tabbing into the component, they can hit ENTER to perform action\n                    onKeyPress={(evt)=> {\n                        if (evt.key === \"Enter\"){\n                            updateDisplayIndex(-1);\n                        }\n                    }}\n                    onClick={() => updateDisplayIndex(-1)}>\n                    <FaAngleUp />\n                </MenuItem>\n                {displayed_list.map((e) => {\n                        return <MenuItem aria-label=\"View this list\"\n                                         key={e.id === props.curr_list_id ? \"current-list-displayed\" : e.id}\n                                         id={e.id === props.curr_list_id ? \"current-list-displayed\" : e.id}\n                                         onKeyPress={(evt)=> {\n                                             // if the user is tabbing into the list name and hit enter\n                                             if (evt.key === \"Enter\"){\n                                                 if (isDesktop || !props.collapsed) {\n                                                     props.onListSelected(e.id)\n                                                 }\n                                             }\n                                         }}\n                                         onClick={()=> {\n                                            if (isDesktop || !props.collapsed) {\n                                                props.onListSelected(e.id)\n                                            }\n                                         }}>\n                            {(e.collaborators.length > 1) && <RiUserSharedLine />} {e.list_name} {\n                                (e.id !== (\"default-list-\" + props.email) &&\n                                (isDesktop || !props.collapsed)) &&\n                                (props.email === e.collaborators[0]) &&\n                                <span aria-label=\" \">\n                                    <TiDelete\n                                        aria-label=\"Delete this list\" tabIndex=\"0\"\n                                        onKeyPress={(evt)=> {\n                                            // if the user is tabbing into the delete button and hit enter\n                                            if (evt.key === \"Enter\"){\n                                                handleDeleteOnClick(evt, e.id);\n                                            }\n                                        }}\n                                        onClick={(evt) => handleDeleteOnClick(evt, e.id)}/>\n                                </span>}\n                        </MenuItem>\n                })\n                }\n                <MenuItem aria-label=\"Scroll down\" id=\"scroll-down\" onKeyPress={(evt)=> {\n                    // if the user is tabbing into the component, they can hit ENTER to perform action\n                    if (evt.key === \"Enter\"){\n                        updateDisplayIndex(1);\n                    }\n                }} \n                onClick={() => updateDisplayIndex(1)}><FaAngleDown /></MenuItem>\n            </Menu>\n            </SidebarContent>\n            <SidebarFooter>\n                <Menu>\n                    <MenuItem id={\"user_displayed\"}>{props.email}</MenuItem>\n                    <MenuItem id={\"logout-button\"} icon={<MdLogout/>} onClick={() => props.auth.signOut()}>\n                        Logout\n                    </MenuItem>\n                </Menu>\n            </SidebarFooter>\n        </ProSidebar>\n    );\n}\n\nexport default Sidebar;","import { useEffect, useRef, useState } from 'react';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <input ref={ref} value={value} onChange={handleChange} {...rest} />;\n}\n\nexport default SelectionMaintainingInput;","import './App.css';\nimport SelectionMaintainingInput from \"./SelectionMaintainingInput\";\nimport {MdIosShare} from \"react-icons/md\";\n\nfunction Header(props){\n\n    function handleKeypress(e) {\n        //it triggers by pressing the enter key\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            e.target.blur();  // exit out of the textarea\n        }\n    };\n\n    function createShareUI() {\n        if (props.curr_list_is_sharable && props.curr_list_id !== \"default-list-\" + props.email) {\n            // a list is shareable if the logged in user is the owner AND the list is not the default list\n            return <button id={\"share_button\"} onClick={props.onShareList}><MdIosShare/></button>\n        }\n        else if (!props.curr_list_is_sharable && props.displayOwnerEmail) {\n            // if the logged in user is a collaborate (not the owner) of the list, display the actual owner's email\n            return <span id={\"owned_by\"}>Owned by: {props.ownerEmail}</span>\n        }\n    }\n\n    return (\n        <div>\n            {createShareUI()}\n        <SelectionMaintainingInput type=\"text\" id=\"list_header\" aria-label=\"To-Do list name. To edit, press arrow key before typing.\"\n                              value={props.curr_list_name}\n                              disabled={props.curr_list_id === \"default-list-\" + props.email}\n                              onChange={(e) => props.onListNameChanged(props.curr_list_id, e.target.value)}\n                              onKeyPress={handleKeypress}\n        />\n        </div>\n    );\n}\n\nexport default Header;","import Modal from './Modal.js';\nimport './ShareList.css';\nimport {useState} from \"react\";\n\nfunction Collaborator(props){\n    return (<div className={\"collaborator\"}>\n        <span className={\"collaborator_user_email\"}>{props.user_email}</span>\n        {props.is_owner ? <span className={\"owner_label\"}>Owner</span> :\n            <span className={\"remove_button\"} onClick={() => props.onRemoveCollaborator(props.curr_list_id, props.user_email)}>Remove</span>}\n    </div>);\n}\n\nfunction ShareList(props){\n    const [emailName, setEmailName] = useState(\"\");\n    return (\n        <Modal>\n            <div id={\"share_modal\"}>\n                <div id={\"add_editor_label\"}>Share With People</div>\n                <div id={\"add_editor_field\"}>\n                    <input type={\"text\"} value={emailName} placeholder={\"Enter email:\"}\n                           onChange={(e) => setEmailName(e.target.value)}/>\n                    <button id={\"share_add_button\"} onClick={() => {\n                        props.onAddCollaborator(props.curr_list_id, emailName);\n                        // clear the email in the input text box\n                        setEmailName(\"\");\n                    }}>Add</button>\n                </div>\n                <div id={\"collaborators_label\"}>Collaborators:</div>\n                <div id={\"collaborators_list\"}>\n                    {props.curr_list_collaborators.map((e) => <Collaborator key={e}\n                                                                            curr_list_id={props.curr_list_id}\n                                                                            onRemoveCollaborator={props.onRemoveCollaborator}\n                                                                            user_email={e}\n                                                                            is_owner={e === props.email}/>)}\n                </div>\n                <button id={\"done_button\"} onClick={props.onClose}>Done</button>\n            </div>\n        </Modal>\n    );\n}\n\nexport default ShareList;","import './App.css';\nimport ItemList from \"./ItemList.js\";\nimport FilterButton from \"./FilterButton.js\";\nimport DeleteButton from \"./DeleteButton.js\";\nimport SortButton from \"./SortButton.js\";\nimport Modal from \"./Modal.js\";\nimport Sidebar from \"./Sidebar.js\";\nimport Header from \"./Header.js\";\nimport ShareList from \"./ShareList.js\";\nimport {useState, useEffect, useRef} from \"react\";\nimport { useMediaQuery } from 'react-responsive';\n\nfunction App(props) {\n    const [toolSelected, setToolSelected] = useState(null);  // for the drop-up for filter and delete\n    const [filterState, setFilterState] = useState(\"All\");\n    const [deleteState, setDeleteState] = useState(null);\n    const [collapseState, setCollapseState] = useState(true);\n    const [modalOn, setModalOn] = useState(false);\n    const [shareModalOn, setShareModalOn] = useState(false);\n    const [showSortDropDown, setShowSortDropDown] = useState(false);\n\n    const isMobile = useMediaQuery({maxWidth: 600});\n    const isLandscape = useMediaQuery({maxHeight: 600, orientation: \"landscape\"});\n    const isDesktop = useMediaQuery({minWidth: 992});\n\n    function handleToolSelected(tool_name){\n        // if you click on the same tool twice, it will deselect it\n        if (toolSelected === tool_name){\n            setToolSelected(null);\n        } else {\n            setToolSelected(tool_name);\n        }\n    }\n\n    const ref = useRef(); // create the ref for the tool bar at the bottom\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (toolSelected && ref.current && !ref.current.contains(e.target)) {\n                setToolSelected(null);\n            }\n        }\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [toolSelected]);\n\n    let numOfItemsToDelete = props.data.length;   // if we are deleting all items\n    if (deleteState === \"Completed\") {\n        numOfItemsToDelete = props.data.filter((e) => e.completed).length;\n    } else if (deleteState === \"Uncompleted\") {\n        numOfItemsToDelete = props.data.filter((e) => !e.completed).length;\n    }\n\n    // determine the number of lists to display in the sidebar\n    let numOfListToDisplay = 3;\n    if (isMobile && !isLandscape) {\n        numOfListToDisplay = 10;\n    }\n    else if (isDesktop) {\n        numOfListToDisplay = 12;\n    }\n\n    return (\n        <div id=\"overall-app\">\n            <Sidebar\n                 list_data={props.list_data}\n                 auth={props.auth}\n                 email={props.email}\n                 curr_list_id={props.curr_list_id}\n                 onListSelected={props.onListSelected}\n                 onListAdded={props.onListAdded}\n                 onListDeleted={props.onListDeleted}\n                 collapsed={collapseState}\n                 setCollapseState={setCollapseState}\n                 maxToDisplay={numOfListToDisplay}\n            />\n      <div id=\"content\">\n        <Header className=\"accent\"\n                email={props.email}\n                curr_list_id={props.curr_list_id}\n                curr_list_name={props.curr_list_name}\n                curr_list_is_sharable={props.curr_list_is_sharable}\n                ownerEmail={props.curr_list_collaborators[0]}\n                displayOwnerEmail={!isMobile && !isLandscape}\n                onListNameChanged = {props.onListNameChanged}\n                onShareList = {() => setShareModalOn(true)}\n        />\n        {props.data.length > 0 && <SortButton\n                                    showDropDown = {showSortDropDown}\n                                    toggleDropDown = {() => setShowSortDropDown(!showSortDropDown)}\n                                    onSortSelected = {props.onSortSelected}\n                                    selectedSortOption = {props.selectedSortOption}\n                                    />}\n        {props.data.length > 0 && <div id=\"column-labels\"><span id=\"checkbox-label\">&#10003;</span> <span id=\"item-name-label\">Item Name</span> <span id=\"priority-label\">Priority</span></div>}\n        <ItemList {...props} filterState = {filterState}/>\n        <div id=\"tools\" ref={ref}>\n            <FilterButton onToolClicked={() => {handleToolSelected(\"filter\")}}\n                          showDropUp = {\"filter\" === toolSelected}\n                          onFilterOpClicked={(option) => setFilterState(option)}\n                          filterState = {filterState}\n                          closeDropUp = {() => setToolSelected(null)}\n            />\n            <DeleteButton onToolClicked={() => {handleToolSelected(\"delete\")}}\n                          showDropUp = {\"delete\" === toolSelected}\n                          deleteState = {deleteState}\n                          onDeleteOpClicked = {(deleteOpName) => setDeleteState(deleteOpName)}\n                          closeDropUp = {() => setToolSelected(null)}\n                          displayModal={() => {setModalOn(true)}}\n            />\n        </div>\n          {modalOn && <Modal>\n              <p>Are you sure that you want to delete <b>all {numOfItemsToDelete.toString()} {deleteState !== \"All\" ? deleteState.toLowerCase() + \" \": \"\"} </b>tasks?</p>\n              <div id=\"modal-response\">\n                  <button type=\"button\" onClick={() => {\n                      setDeleteState(null);\n                      setModalOn(false);  // hide the modal\n                  }}>\n                      Cancel\n                  </button>\n                  <button id=\"confirm-button\" type=\"button\" onClick={() =>  {\n                      props.onDeleteByCategory(deleteState);\n                      setToolSelected(null);   //  reset the toolSelected state, so that the dropUp goes away\n                      setDeleteState(null);\n                      setModalOn(false);  // hide the modal\n                  }}>\n                      Delete</button>\n              </div>\n          </Modal>}\n          {shareModalOn && <ShareList email={props.email}\n                                      curr_list_id={props.curr_list_id}\n                                      curr_list_collaborators={props.curr_list_collaborators}\n                                      onAddCollaborator={props.onAddCollaborator}\n                                      onRemoveCollaborator={props.onRemoveCollaborator}\n                                      onClose={() => setShareModalOn(false)}\n          />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport App from \"./App.js\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport firebase from \"firebase/compat\";\nimport './AppWrapper.css';\nimport {MdLogout} from \"react-icons/md\";\n\nconst collectionName = \"todo-lists-share\";\n\nfunction InMemoryApp(props) {\n    const [sortOption, setSortOption] = useState(\"created\");\n\n    // get the names of all the lists first\n    let overall_query = props.db.collection(collectionName).where(\"collaborators\", \"array-contains\", props.email);\n    const [overall_value, overall_loading, overall_error] = useCollection(overall_query);\n\n    if (overall_error){\n        console.log(\"error in getting all the lists' information: \");\n        console.log(overall_error);\n    }\n\n    let all_lists_id = [];\n    if (overall_value) {\n        all_lists_id = overall_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    // storing the id of the current list\n    const [currentList, setCurrentList] = useState(\"default-list-\"+props.email);\n\n    // get the data of the list that we are currently displaying\n    let query = props.db.collection(collectionName).doc(currentList).collection(\"list-of-items\");\n\n    if (sortOption){\n        if (sortOption === \"priority\"){\n            // because our priority has 4 as the highest priority, need to sort in descending order\n            query = query.orderBy(sortOption, \"desc\").orderBy(\"item_name\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n\n    const [value, loading, error] = useCollection(query);\n\n    let data = [];\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    function handleItemChanged(itemID, field, newValue) {\n        const doc = props.db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(itemID);\n        doc.update({\n            [field]: newValue,\n        })\n    }\n\n    function handleItemDeleted(itemID) {\n        props.db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(itemID).delete();\n    }\n\n    function handleItemCategoryDeleted(category) {\n        // iterate through each doc only delete based on selected category\n        value.forEach((doc) => {\n            if (category === \"Completed\" && doc.data().completed) {\n                doc.ref.delete();\n            } else if (category === \"Uncompleted\" && !doc.data().completed) {\n                doc.ref.delete();\n            } else if (category === \"All\") {\n                doc.ref.delete();\n            }\n        });\n    }\n\n    function handleItemAdded() {\n        const newId = generateUniqueID();\n        props.db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(newId).set({\n            id: newId,\n            item_name: \"\",\n            completed: false,\n            priority: 0,\n            created: firebase.firestore.Timestamp.fromDate(new Date()),\n        })\n        return newId;\n    }\n\n    function handleListNameChanged(listId, newValue){\n        const doc = props.db.collection(collectionName).doc(listId);\n        doc.update({\n            list_name: newValue,\n        })\n    }\n\n    function handleListAdded(){\n        const newId = generateUniqueID();\n        props.db.collection(collectionName).doc(newId).set({\n            id: newId,\n            list_name: \"Untitled\",\n            owner: props.email,\n            collaborators: [props.email],\n        })\n        return newId;\n    }\n\n    function handleListDeleted(listId) {\n        props.db.collection(collectionName).doc(listId).delete();\n    }\n\n    function handleAddCollaborator(listId, collaborator_email){\n        const doc = props.db.collection(collectionName).doc(listId);\n        // arrayUnion guarantees that only one copy of the collaborator email exists in the array\n        //      impossible to have 2 instances of the same email in the array\n        doc.update({\n            collaborators: firebase.firestore.FieldValue.arrayUnion(collaborator_email)\n        });\n    }\n\n    function handleRemoveCollaborator(listId, collaborator_email){\n        const doc = props.db.collection(collectionName).doc(listId);\n        doc.update({\n            collaborators: firebase.firestore.FieldValue.arrayRemove(collaborator_email)\n        });\n    }\n\n    // get additional information about the list that we are currently displaying\n    let curr_list_name = \"\";\n    let curr_list_is_sharable = false;\n    let curr_list_collaborators = [];\n    if (all_lists_id.length > 0){\n        // find the information of the current list that we are displaying\n        let curr_list_array = all_lists_id.filter((e) => e.id === currentList);\n        // if we can get the current list that we are displaying\n        if (curr_list_array.length > 0) {\n            let curr_list = curr_list_array[0];  // get the current list\n\n            curr_list_name = curr_list.list_name;\n            // we can only share the list if the logged in user is the owner of the current list\n            curr_list_is_sharable = (curr_list.owner === props.email);\n            curr_list_collaborators = curr_list.collaborators;\n        } else {\n            // for some reason, we cannot get info about the current list that we are displaying\n            //      change current list back to the default list\n            //      (help handle synchronization when user deletes the list from one window,\n            //      and we need to synchronize the display in another window)\n            setCurrentList(\"default-list-\"+props.email);\n        }\n    }\n\n    if (overall_loading || loading) {\n        return (<div id={\"login-screen\"}>\n            <div id={\"app-name\"}>To-do Lists</div>\n            <div id={\"login-google\"}>Loading...</div>\n        </div>);\n    } else if (overall_error || error){\n        return (<div id={\"login-screen\"}>\n                    <div id={\"app-name\"}>To-do Lists</div>\n                    <div id={\"error_msgs\"}>\n                        <div id={\"error\"}>Oh no! Something went wrong. Please logout and login again.</div>\n                        <div id={\"logout\"}>\n                            <button onClick={() => props.auth.signOut()}>\n                                <MdLogout/> Logout\n                            </button>\n                        </div>\n                    </div>\n                </div>);\n    } else {\n        return (<App data={data}\n                 auth={props.auth}\n                 email={props.email}\n                 list_data={all_lists_id}\n                 curr_list_id={currentList}\n                 curr_list_name={curr_list_name}\n                 curr_list_is_sharable={curr_list_is_sharable}\n                 curr_list_collaborators={curr_list_collaborators}\n                 onItemChanged={handleItemChanged}\n                 onItemDeleted={handleItemDeleted}\n                 onDeleteByCategory={handleItemCategoryDeleted}\n                 onItemAdded={handleItemAdded}\n                 onSortSelected={(option) => setSortOption(option)}\n                 onListSelected={setCurrentList}\n                 onListNameChanged={handleListNameChanged}\n                 onListAdded={handleListAdded}\n                 onListDeleted={handleListDeleted}\n                 onAddCollaborator={handleAddCollaborator}\n                 onRemoveCollaborator={handleRemoveCollaborator}\n                 selectedSortOption={sortOption}/>\n        );\n    }\n}\n\nexport default InMemoryApp;","import InMemoryApp from \"./InMemoryApp.js\";\nimport './AppWrapper.css';\n\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {FcGoogle} from \"react-icons/all\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCYBi2G8RnkLs2Bzj_XDLjYPylF2oRhq5Y\",\n    authDomain: \"cs124-lab-celine-yuki.firebaseapp.com\",\n    projectId: \"cs124-lab-celine-yuki\",\n    storageBucket: \"cs124-lab-celine-yuki.appspot.com\",\n    messagingSenderId: \"2120607993\",\n    appId: \"1:2120607993:web:d5d647b2b43f3c7fd95a28\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nfunction AppWrapper(props) {\n    const [user, loading, error] = useAuthState(auth);\n\n    if (error){\n        console.log(\"error: \");\n        console.log(error);\n    }\n\n    if (loading) {\n        return <div id={\"login-screen\"}>\n            <div id={\"app-name\"}>To-do Lists</div>\n            <div id={\"login-google\"}>Loading...</div>\n        </div>;\n    } else if (user) {\n        // check if the logged-in user is a new user\n        if (user.metadata.creationTime === user.metadata.lastSignInTime){\n            // since we don't even get a default list (all_list_id is empty)\n            //  this is a new user, and we should create a default list for the user\n            db.collection(\"todo-lists-share\").doc(\"default-list-\"+user.email).set({\n                        id: \"default-list-\"+user.email,\n                        list_name: \"My List\",\n                        owner: user.email,\n                        collaborators: [user.email],\n            });\n        }\n        // user has logged in\n        return <InMemoryApp db={db} auth={auth} email={user.email}/>;\n    } else {\n        return <SignIn />;\n    }\n}\n\nfunction SignIn() {\n    return <div id={\"login-screen\"}>\n        <div id={\"app-name\"}>To-do Lists</div>\n        <div  id={\"login-google\"}>\n            <button onClick={() =>\n                auth.signInWithPopup(googleProvider)}><FcGoogle/> Login with Google\n            </button>\n        </div>\n    </div>\n}\n\n\nexport default AppWrapper;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './AppWrapper.js';\nimport reportWebVitals from './reportWebVitals.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}