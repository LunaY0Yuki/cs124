{"version":3,"sources":["Priority.js","Row.js","ItemList.js","FilterDropUp.js","FilterButton.js","DeleteDropUp.js","DeleteButton.js","SortButton.js","Modal.js","Sidebar.js","SelectionMaintainingInput.js","Header.js","App.js","InMemoryApp.js","reportWebVitals.js","index.js"],"names":["Priority","props","displayed_priority","aria_priority","selectedPriority","ref","useRef","useEffect","checkIfClickedOutside","e","showDropDown","current","contains","target","onPriorityClicked","document","addEventListener","window","removeEventListener","className","aria-label","id","toString","onClick","style","top","rowYpos","changePriority","Row","textarea_ref","useState","item_name","itemName","setItemName","editMode","setEditMode","isNewItem","focus","completed","onChange","onItemChanged","type","checked","value","disabled","onFocus","onBlur","currentTarget","onItemDeleted","changeNewItemId","onKeyPress","key","preventDefault","newId","onItemAdded","getBoundingClientRect","priority","new_priority","ItemList","newItemId","setNewItemId","prioritySelected","setPrioritySelected","createRowComponent","item_id","renderedList","data","length","renderedData","filter","filterState","map","newItemData","push","onScroll","FilterDropUp","optionClickedHelper","option_name","onFilterOpClicked","closeDropUp","FilterButton","isMenuOpen","setIsMenuOpen","onToolClicked","showDropUp","DeleteDropUp","onDeleteOpClicked","displayModal","deleteState","DeleteButton","SortButton","handleSortOptionClicked","option","onSortSelected","toggleDropDown","selectedSortOption","Modal","children","onClose","onOk","confirm_button_name","Sidebar","displayIndex","setDisplayIndex","isDesktop","useMediaQuery","minWidth","updateDisplayIndex","change_by","list_data","maxToDisplay","handleDeleteOnClick","evt","list_id","stopPropagation","curr_list_id","onListSelected","onListDeleted","collapsed","setCollapseState","displayed_list","slice","iconShape","icon","newListId","onListAdded","console","log","list_name","tabIndex","SelectionMaintainingInput","rest","cursor","setCursor","input","setSelectionRange","selectionStart","Header","curr_list_name","onListNameChanged","blur","App","toolSelected","setToolSelected","setFilterState","setDeleteState","collapseState","modalOn","setModalOn","showSortDropDown","setShowSortDropDown","isMobile","maxWidth","isLandscape","orientation","handleToolSelected","tool_name","numOfItemsToDelete","numOfListToDisplay","deleteOpName","onDeleteByCategory","toLowerCase","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","collectionName","InMemoryApp","sortOption","setSortOption","overall_query","collection","useCollection","overall_value","all_lists_id","docs","doc","currentList","setCurrentList","query","orderBy","error","itemID","field","newValue","update","delete","category","forEach","generateUniqueID","set","created","Timestamp","fromDate","Date","listId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialData","getElementById"],"mappings":"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","file":"static/js/main.272fbf54.chunk.js","sourcesContent":["import './Priority.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction Priority(props){\n    let displayed_priority = \"–\";\n    let aria_priority = \"No priority selected.\";  // Determine how voiceover should describe the priority button\n    if (props.selectedPriority === 1){\n        displayed_priority = \"L\";\n        aria_priority = \"Low priority.\";\n    } else if (props.selectedPriority === 2){\n        displayed_priority = \"M\";\n        aria_priority = \"Medium priority.\";\n    } else if (props.selectedPriority === 3){\n        displayed_priority = \"H\";\n        aria_priority = \"High priority.\";\n    }\n\n    const ref = useRef();  // create a ref to the priority's drop down selector\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.onPriorityClicked();\n            }\n        }\n        document.addEventListener(\"mousedown\", checkIfClickedOutside);\n\n        // if the window size has changed, close the dropdown\n        window.addEventListener('resize', () => {\n            if (props.showDropDown) {\n                props.onPriorityClicked();\n            }\n        });\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n            window.removeEventListener('resize', () => {\n                if (props.showDropDown) {\n                    props.onPriorityClicked();\n                }\n            });\n        }\n    });\n\n\n\n    return (\n        <div className=\"dropdown\" ref={ref}>\n            {props.showDropDown ? <button aria-label={aria_priority} id=\"priority-outline\"\n                                          className={\"dropbtn\"+props.selectedPriority.toString()}\n                                          onClick={props.onPriorityClicked}>{displayed_priority}</button> :\n                <button aria-label={aria_priority}\n                        className={\"dropbtn\"+props.selectedPriority.toString()}\n                        onClick={props.onPriorityClicked}>{displayed_priority}</button>}\n            {props.showDropDown && <div className=\"dropdown-content\" style={{top: props.rowYpos}}>\n                <button onClick = {() => props.changePriority(0)}\n                        aria-label=\"Priority option: None\"\n                        className={props.selectedPriority === 0 ? \"none-selected\" : \"priority-option\"}>None {props.selectedPriority === 0 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(1)}\n                        aria-label=\"Priority option: Low\"\n                        className={props.selectedPriority === 1 ? \"low-selected\" : \"priority-option\"}>Low {props.selectedPriority === 1 ? <span>&#10003;</span> : null}</button>\n                <button onClick = {() => props.changePriority(2)}\n                        aria-label=\"Priority option: Medium\"\n                        className={props.selectedPriority === 2 ? \"medium-selected\" : \"priority-option\"}>Medium {props.selectedPriority === 2 ? <span>&#10003;</span> : null}</button>\n                <button id=\"high-option\" onClick = {() => props.changePriority(3)}\n                        aria-label=\"Priority option: High\"\n                        className={props.selectedPriority === 3 ? \"high-selected\" : \"priority-option\"}>High {props.selectedPriority === 3 ? <span>&#10003;</span> : null}</button>\n            </div>}\n            {/*{props.showDropDown ? <button id=\"priority-outline\" className={\"dropbtn\"+props.selectedPriority.toString()} onClick={props.onPriorityClicked}>{displayed_priority}</button> :*/}\n            {/*    <button className={\"dropbtn\"+props.selectedPriority.toString()} onClick={props.onPriorityClicked}>{displayed_priority}</button>}*/}\n        </div>\n    );\n}\n\nexport default Priority;","import {useEffect, useRef, useState} from \"react\";\nimport './Row.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Priority from \"./Priority\";\n\nfunction Row(props){\n    const textarea_ref = useRef(null);\n    const [itemName, setItemName] = useState(props.item_name);\n    const [editMode, setEditMode] = useState(false);\n\n    function handleKeypress(e) {\n        //it triggers by pressing the enter key\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            let newId = props.onItemAdded();\n            props.changeNewItemId(newId);\n        }\n    };\n\n    useEffect(() => {\n        // we only want to focus on the text area if it's a new item\n        if (props.isNewItem) {\n            textarea_ref.current.focus();\n        }\n\n        // to sync up changes in firestore to local (when someone is editing the item from another window)\n        if (itemName != props.item_name && !editMode) {\n            setItemName(props.item_name);\n        }\n    });\n\n    return (\n        <div id={props.id} className={props.completed ? \"task-item-completed\" : \"task-item-uncompleted\"}>\n            <input aria-label=\"Click or press space bar to check/uncheck item.\" onChange={() => {\n                props.onItemChanged(props.id, \"completed\", !props.completed)\n            }} type=\"checkbox\" className=\"check-complete\" checked={props.completed}/>\n            <TextareaAutosize aria-label=\"Item name text box.\"\n                              className=\"item-name\" value={itemName}\n                              onChange={(e) => setItemName(e.target.value)}\n                              disabled={props.completed}\n                              onFocus={() => {\n                                  if (!editMode) {\n                                      setEditMode(true);\n                                  }\n                              }}\n                              onBlur={(e) => {\n                                  // delete an item if its name is empty and the user clicks out of it\n                                  if (e.currentTarget.value === \"\") {\n                                      props.onItemDeleted(props.id);\n                                  }\n\n                                  if (props.isNewItem){\n                                      // when we click out of a new item\n                                      // item list should forget that this row is the newly added item\n                                      props.changeNewItemId(null);\n                                  }\n                                  setEditMode(false);  // because we click out of the textbox, no longer in edit mode\n                                  props.onItemChanged(props.id, \"item_name\", e.target.value);\n                              }}\n                              onKeyPress={handleKeypress}\n                              ref={textarea_ref}\n            />\n            <Priority\n                rowYpos = {textarea_ref.current ? textarea_ref.current.getBoundingClientRect()[\"y\"] : 0}\n                selectedPriority={props.priority}\n                      showDropDown={props.showDropDown}\n                      onPriorityClicked={props.onPriorityClicked}\n                      changePriority={(new_priority) => {\n                          props.onItemChanged(props.id, \"priority\", new_priority);\n                          props.onPriorityClicked();\n                      }\n                      }\n            />\n        </div>\n    );\n}\n\nexport default Row;","import './ItemList.css';\nimport Row from'./Row.js';\nimport {useState, useEffect} from \"react\";\n\n\n// Define the List component that contain all the items\nfunction ItemList(props){\n    const [newItemId, setNewItemId] = useState(null);\n    const [prioritySelected, setPrioritySelected] = useState(null);\n\n    function handlePriorityDropDown(item_id){\n        // if you click on the same button twice, it will deselect it. will also toggle priority button and their dropdowns\n        if (prioritySelected === item_id){\n            setPrioritySelected(null);\n        } else {\n            setPrioritySelected(item_id);\n        }\n    }\n\n    function createRowComponent(e){\n        return <Row key={e.id} id={e.id} item_name={e.item_name}\n             completed={e.completed}\n             priority={e.priority}\n             showDropDown={e.id === prioritySelected}\n             onPriorityClicked={() => handlePriorityDropDown(e.id)}\n             onItemChanged={props.onItemChanged}\n             onItemDeleted={props.onItemDeleted}\n             onItemAdded={props.onItemAdded}\n             isNewItem={e.id === newItemId}\n             changeNewItemId={setNewItemId}\n        />\n    }\n\n    let renderedList = <p id=\"no-items\">No items to do.</p>;\n\n    if (props.data.length > 0) {\n        let renderedData = props.data.filter((e) => e.id !== newItemId);  // when props.filterState === \"all\", so we show all\n\n        if (props.filterState === \"Completed\") {\n            renderedData = props.data.filter((e) => e.completed);\n        } else if (props.filterState === \"Uncompleted\") {\n            renderedData = props.data.filter((e) => !e.completed);\n        }\n\n        // create the rows for items whose id does not match newItemId\n        renderedList = renderedData.map((e) => createRowComponent(e));\n\n        if (newItemId){\n            // filter out the new item based on newItemId\n            // filter returns an array (it should be an array with length 1), so we only want the first one\n            let newItemData = props.data.filter((e) => e.id === newItemId);\n            if (newItemData.length === 1){\n                // append new item to the rendered list so it appears at the end\n                renderedList.push(createRowComponent(newItemData[0]));\n            }\n\n        }\n    }\n\n    return (\n        <div>\n            <div id=\"item_list\" onScroll={() => setPrioritySelected(null)}>\n                {renderedList}\n            </div>\n            <button aria-label=\"Add a new item to this list.\" id=\"add\" type=\"button\" onClick={()  => {\n                let newId = props.onItemAdded();\n                setNewItemId(newId);\n            }}>+</button>\n        </div>\n    );\n}\n\nexport default ItemList;","import './ToolsButton.css';\n\nfunction FilterDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onFilterOpClicked(option_name);\n        props.closeDropUp();\n    }\n\n    return (\n        <div className=\"dropup-content\">\n            <button onClick={() => optionClickedHelper(\"All\")}>\n                All {props.filterState === \"All\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.filterState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.filterState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default FilterDropUp;","import './ToolsButton.css';\nimport FilterDropUp from \"./FilterDropUp.js\";\nimport { useEffect, useRef, useState } from \"react\"\n\nfunction FilterButton(props){\n    const ref = useRef()\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (isMenuOpen && ref.current && !ref.current.contains(e.target)) {\n                setIsMenuOpen(false);\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [isMenuOpen])\n    return (\n        <div className=\"dropup\">\n            <button aria-label=\"Filter\" className=\"accent\" id=\"filter-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">filter_alt</i>\n            </button>\n            {props.showDropUp && <FilterDropUp onFilterOpClicked={props.onFilterOpClicked}\n                                               filterState = {props.filterState}\n                                               closeDropUp = {props.closeDropUp}/>}\n        </div>\n    );\n}\n\nexport default FilterButton;","import './ToolsButton.css';\n\nfunction DeleteDropUp(props){\n    function optionClickedHelper(option_name){\n        props.onDeleteOpClicked(option_name);\n        props.displayModal();\n        props.closeDropUp();\n    }\n\n    return (\n        <div className=\"dropup-content\">\n\n            <button onClick={() => optionClickedHelper(\"All\")}>\n                All {props.deleteState === \"All\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Completed\")}>\n                Completed {props.deleteState === \"Completed\" ? <span>&#10003;</span> : null}\n            </button>\n            <button onClick={() => optionClickedHelper(\"Uncompleted\")}>\n                Uncompleted {props.deleteState === \"Uncompleted\" ? <span>&#10003;</span> : null}\n            </button>\n        </div>\n    );\n}\n\nexport default DeleteDropUp;","import './ToolsButton.css';\nimport DeleteDropUp from './DeleteDropUp.js';\n\nfunction DeleteButton(props){\n    return (\n        <div className=\"dropup\">\n            <button aria-label=\"Delete\" className=\"accent\" id=\"delete-dropup\" type=\"button\" onClick={props.onToolClicked}>\n                <i className=\"material-icons-outlined md-38\">delete_outline</i>\n            </button>\n            {props.showDropUp && <DeleteDropUp displayModal={props.displayModal}\n                                               deleteState={props.deleteState}\n                                               closeDropUp={props.closeDropUp}\n                                               onDeleteOpClicked={props.onDeleteOpClicked}/>}\n        </div>\n    );\n}\n\nexport default DeleteButton;","import './SortButton.css';\nimport {useEffect, useRef} from \"react\";\n\nfunction SortButton(props){\n    const ref = useRef();  // create a ref for the sort drop down selector\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (props.showDropDown && ref.current && !ref.current.contains(e.target)) {\n                props.toggleDropDown();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    });\n\n    function handleSortOptionClicked(option){\n        props.onSortSelected(option);\n        props.toggleDropDown();\n    }\n\n    return (\n        <div className=\"sort-dropdown\" ref={ref}>\n            <button id={props.showDropDown ? \"sort-icon-outlined\": \"sort-icon\"} onClick={props.toggleDropDown}><i className=\"material-icons-outlined em2\">sort</i></button>\n            {props.showDropDown && <div className=\"sort-dropdown-content\">\n                <button onClick={() => handleSortOptionClicked(\"created\")}>By Date {props.selectedSortOption === \"created\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"item_name\")}>By Name {props.selectedSortOption === \"item_name\" ? <span>&#10003;</span> : null} </button>\n                <button onClick={() => handleSortOptionClicked(\"priority\")} id=\"last-option\">By Priority {props.selectedSortOption === \"priority\" ? <span>&#10003;</span> : null} </button>\n            </div>}\n        </div>\n    );\n}\n\nexport default SortButton;","import './Modal.css';\n\nfunction Modal(props){\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                {props.children}\n                <div id=\"modal-response\">\n                    <button type=\"button\" onClick={props.onClose}>\n                     Cancel\n                    </button>\n                    <button id=\"confirm-button\" type=\"button\" onClick={() =>  {\n                        props.onOk();\n                        props.onClose();\n                    }}>\n                        {props.confirm_button_name}</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;","import { ProSidebar, Menu, MenuItem} from 'react-pro-sidebar';\nimport { MdOutlinePlaylistAdd } from \"react-icons/md\";\nimport {FaAngleUp, FaAngleDown} from \"react-icons/fa\";\nimport {TiDelete} from \"react-icons/ti\";\nimport './Sidebar.scss';\nimport { useEffect, useRef, useState} from \"react\";\n// import 'react-pro-sidebar/dist/css/styles.css';\nimport { useMediaQuery } from 'react-responsive';\n\nfunction Sidebar(props){\n    const ref = useRef();\n    \n    const [displayIndex, setDisplayIndex] = useState(0);\n    const isDesktop = useMediaQuery({minWidth: 992});\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if ((!props.collapsed) && ref.current && !ref.current.contains(e.target)) {\n                props.setCollapseState(true);\n            }\n        }\n\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    });\n\n    // update what lists actually get displayed in the sidebar\n    function updateDisplayIndex(change_by){\n        // cannot decrease the index anymore\n        //  displayIndex === 0 && change_by < 0\n        //  cannot  increase the index anymore\n        // if list_data len > max display then should change\n        // displayIndex === props.list_data.length - props.maxToDisplay && change_by > 0\n        // setDisplayIndex(displayIndex + change_by)\n\n        if ((props.list_data.length > props.maxToDisplay) &&\n            !(displayIndex === 0 && change_by < 0) &&\n            !(displayIndex === props.list_data.length - props.maxToDisplay && change_by > 0)){\n            setDisplayIndex(displayIndex + change_by);\n        }\n    }\n\n\n    function handleDeleteOnClick(evt, list_id){\n            // stop propagating the onClick to parent\n            evt.stopPropagation();\n\n            // if we are currently displaying the list that we are deleting\n            //   the app will show the default list\n            if (props.curr_list_id === list_id) {\n                props.onListSelected(\"default-list\");\n            }\n\n            props.onListDeleted(list_id);\n\n            // move back one index\n            updateDisplayIndex(-1);\n\n    }\n    \n    // get the subset of list name that we will display\n    const displayed_list = props.list_data.slice(displayIndex, displayIndex + props.maxToDisplay);\n\n    return (\n        <ProSidebar collapsed={props.collapsed} onClick={() => {\n            if (!isDesktop) {\n                props.setCollapseState(false);\n            }\n        }} ref={ref}>\n            <Menu iconShape=\"square\">\n                <MenuItem aria-label=\"Add a new list\" id=\"add-new-list\" icon={<MdOutlinePlaylistAdd />} onClick={() => {\n                    if (isDesktop || !props.collapsed) {\n                        let newListId = props.onListAdded();  // create a new Untitled List in firestore\n                        // show the new list\n                        console.log(\"==== added new list ====\");\n                        props.onListSelected(newListId);\n                        // \"scroll\" to the bottom of the list in the side bar to display the new list\n                        if (props.list_data.length > props.maxToDisplay) {\n                            setDisplayIndex(props.list_data.length - props.maxToDisplay + 1);\n                        }\n                    }\n                }} >New List</MenuItem>\n                <MenuItem\n                    aria-label=\"Scroll Up\" id=\"scroll-up\"\n                    onKeyPress={(evt)=> {\n                        if (evt.key === \"Enter\"){\n                            updateDisplayIndex(-1);\n                        }\n                    }}\n                    onClick={() => updateDisplayIndex(-1)}>\n                    <FaAngleUp />\n                </MenuItem>\n                {displayed_list.map((e) => {\n                        return <MenuItem aria-label=\"View this list\" id={e.id} \n                                         onKeyPress={(evt)=> {\n                                             // if the user is tabbing into the list name and hit enter\n                                             if (evt.key === \"Enter\"){\n                                                 if (isDesktop || !props.collapsed) {\n                                                     props.onListSelected(e.id)\n                                                 }\n                                             }\n                                         }}\n                                         onClick={()=> {\n                                            if (isDesktop || !props.collapsed) {\n                                                props.onListSelected(e.id)\n                                            }\n                                         }}>\n                            {e.list_name} {(e.id !== \"default-list\" && (isDesktop || !props.collapsed)) && <span aria-label=\" \"><TiDelete\n                            aria-label=\"Delete this list\" tabIndex=\"0\"\n                            onKeyPress={(evt)=> {\n                                // if the user is tabbing into the delete button and hit enter\n                                if (evt.key === \"Enter\"){\n                                    handleDeleteOnClick(evt, e.id);\n                                }\n                            }}\n                            onClick={(evt) => handleDeleteOnClick(evt, e.id)}/></span>}\n                        </MenuItem>\n                })\n                }\n                <MenuItem aria-label=\"Scroll down\" id=\"scroll-down\" onKeyPress={(evt)=> {\n                    if (evt.key === \"Enter\"){\n                        updateDisplayIndex(1);\n                    }\n                }} \n                onClick={() => updateDisplayIndex(1)}><FaAngleDown /></MenuItem>\n            </Menu>\n        </ProSidebar>\n    );\n}\n\nexport default Sidebar;","import { useEffect, useRef, useState } from 'react';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <input ref={ref} value={value} onChange={handleChange} {...rest} />;\n}\n\nexport default SelectionMaintainingInput;","import './App.css';\nimport SelectionMaintainingInput from \"./SelectionMaintainingInput\";\n\nfunction Header(props){\n    // const [listName, setListName] = useState(props.curr_list_name);\n\n    function handleKeypress(e) {\n        //it triggers by pressing the enter key\n        if (e.key === \"Enter\") {\n            e.preventDefault();\n            e.target.blur();  // exit out of the textarea\n        }\n    };\n\n    return (<SelectionMaintainingInput type=\"text\" id=\"list_header\" aria-label=\"To-Do list name. To edit, press arrow key before typing.\"\n                              value={props.curr_list_name}\n                              disabled={props.curr_list_id === \"default-list\"}\n                              // onChange={(e) => setListName(e.target.value)}\n                                onChange={(e) => props.onListNameChanged(props.curr_list_id, e.target.value)\n                                }\n                              // onBlur={(e) => props.onListNameChanged(props.curr_list_id, e.target.value)\n                              //}\n                              onKeyPress={handleKeypress}\n    />);\n}\n\nexport default Header;","import './App.css';\nimport ItemList from \"./ItemList.js\";\nimport FilterButton from \"./FilterButton.js\";\nimport DeleteButton from \"./DeleteButton.js\";\nimport SortButton from \"./SortButton.js\";\nimport Modal from \"./Modal.js\";\nimport Sidebar from \"./Sidebar.js\";\nimport Header from \"./Header.js\";\nimport {useState, useEffect, useRef} from \"react\";\nimport { useMediaQuery } from 'react-responsive';\n\nfunction App(props) {\n    const [toolSelected, setToolSelected] = useState(null);  // for the drop-up for filter and delete\n    const [filterState, setFilterState] = useState(\"All\");\n    const [deleteState, setDeleteState] = useState(null);\n    const [collapseState, setCollapseState] = useState(true);\n    const [modalOn, setModalOn] = useState(null);\n    const [showSortDropDown, setShowSortDropDown] = useState(false);\n\n    const isMobile = useMediaQuery({maxWidth: 600});\n    const isLandscape = useMediaQuery({orientation: \"landscape\"});\n    const isDesktop = useMediaQuery({minWidth: 992});\n\n    function handleToolSelected(tool_name){\n        // if you click on the same tool twice, it will deselect it\n        if (toolSelected === tool_name){\n            setToolSelected(null);\n        } else {\n            setToolSelected(tool_name);\n        }\n    }\n\n    const ref = useRef(); // create the ref for the tool bar at the bottom\n\n    useEffect(() => {\n        const checkIfClickedOutside = e => {\n            // If the menu is open and the clicked target is not within the menu,\n            // then close the menu\n            if (toolSelected && ref.current && !ref.current.contains(e.target)) {\n                setToolSelected(null);\n            }\n        }\n        document.addEventListener(\"mousedown\", checkIfClickedOutside)\n\n        return () => {\n            // Cleanup the event listener\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n        }\n    }, [toolSelected]);\n\n    let numOfItemsToDelete = props.data.length;   // if we are deleting all items\n    if (deleteState === \"Completed\") {\n        numOfItemsToDelete = props.data.filter((e) => e.completed).length;\n    } else if (deleteState === \"Uncompleted\") {\n        numOfItemsToDelete = props.data.filter((e) => !e.completed).length;\n    }\n\n    // determine the number of lists to display in the sidebar\n    let numOfListToDisplay = 4;\n    if (isMobile && !isLandscape) {\n        numOfListToDisplay = 10;\n    }\n    else if (isDesktop) {\n        numOfListToDisplay = 12;\n    }\n\n    return (\n        <div id=\"overall-app\">\n            <Sidebar list_data={props.list_data}\n                 curr_list_id={props.curr_list_id}\n                 onListSelected={props.onListSelected}\n                 onListAdded={props.onListAdded}\n                 onListDeleted={props.onListDeleted}\n                 collapsed={collapseState}\n                 setCollapseState={setCollapseState}\n                 maxToDisplay={numOfListToDisplay}\n            />\n      <div id=\"content\">\n        <Header className=\"accent\"\n                curr_list_id={props.curr_list_id}\n                curr_list_name={props.curr_list_name}\n                onListNameChanged = {props.onListNameChanged}\n        />\n        {props.data.length > 0 && <SortButton\n                                    showDropDown = {showSortDropDown}\n                                    toggleDropDown = {() => setShowSortDropDown(!showSortDropDown)}\n                                    onSortSelected = {props.onSortSelected}\n                                    selectedSortOption = {props.selectedSortOption}\n                                    />}\n        {props.data.length > 0 && <div id=\"column-labels\"><span id=\"checkbox-label\">&#10003;</span> <span id=\"item-name-label\">Item Name</span> <span id=\"priority-label\">Priority</span></div>}\n        <ItemList {...props} filterState = {filterState}/>\n        <div id=\"tools\" ref={ref}>\n            <FilterButton onToolClicked={() => {handleToolSelected(\"filter\")}}\n                          showDropUp = {\"filter\" === toolSelected}\n                          onFilterOpClicked={(option) => setFilterState(option)}\n                          filterState = {filterState}\n                          closeDropUp = {() => setToolSelected(null)}\n            />\n            <DeleteButton onToolClicked={() => {handleToolSelected(\"delete\")}}\n                          showDropUp = {\"delete\" === toolSelected}\n                          deleteState = {deleteState}\n                          onDeleteOpClicked = {(deleteOpName) => setDeleteState(deleteOpName)}\n                          closeDropUp = {() => setToolSelected(null)}\n                          displayModal={() => {setModalOn(true)}}\n            />\n        </div>\n          {modalOn && <Modal\n                             confirm_button_name = \"Delete\"\n                             onClose = {() => {\n                                 setDeleteState(null);\n                                 setModalOn(false);  // hide the modal\n                             }}\n                             onOk = {() => {\n                                 props.onDeleteByCategory(deleteState);\n                                 setToolSelected(null);   //  reset the toolSelected state, so that the dropUp goes away\n                             }\n                             }>\n              <p>Are you sure that you want to delete <b>all {numOfItemsToDelete.toString()} {deleteState !== \"All\" ? deleteState.toLowerCase() + \" \": \"\"} </b>tasks?</p>\n          </Modal>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport App from \"./App.js\";\n\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCYBi2G8RnkLs2Bzj_XDLjYPylF2oRhq5Y\",\n    authDomain: \"cs124-lab-celine-yuki.firebaseapp.com\",\n    projectId: \"cs124-lab-celine-yuki\",\n    storageBucket: \"cs124-lab-celine-yuki.appspot.com\",\n    messagingSenderId: \"2120607993\",\n    appId: \"1:2120607993:web:d5d647b2b43f3c7fd95a28\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nconst collectionName = \"todo-lists\";\n\nfunction InMemoryApp(props) {\n    const [sortOption, setSortOption] = useState(\"created\");\n\n    // get the names of all the lists first\n    let overall_query = db.collection(collectionName);\n    const [overall_value, overall_loading, overall_error] = useCollection(overall_query);\n\n    let all_lists_id = [];\n    // let init_list_id = \"default-list\";\n    if (overall_value) {\n        all_lists_id = overall_value.docs.map((doc) => {\n            return {...doc.data()}});\n\n        // init_list_id = all_lists_id[0].id;\n    }\n\n    // storing the id of the current list\n    const [currentList, setCurrentList] = useState(\"default-list\");\n\n\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-of-items\");\n\n    if (sortOption){\n        if (sortOption === \"priority\"){\n            // because our priority has 4 as the highest priority, need to sort in descending order\n            query = query.orderBy(sortOption, \"desc\").orderBy(\"item_name\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n\n    const [value, loading, error] = useCollection(query);\n\n    console.log(\"error: \");\n    console.log(error);\n\n    let data = [];\n    if (value) {\n        data = value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    console.log(\"data: \");\n    console.log(data);\n\n    function handleItemChanged(itemID, field, newValue) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(itemID);\n        doc.update({\n            [field]: newValue,\n        })\n    }\n\n    function handleItemDeleted(itemID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(itemID).delete();\n    }\n\n    function handleItemCategoryDeleted(category) {\n        // iterate through each doc only delete based on selected category\n        value.forEach((doc) => {\n            if (category === \"Completed\" && doc.data().completed) {\n                doc.ref.delete();\n            } else if (category === \"Uncompleted\" && !doc.data().completed) {\n                doc.ref.delete();\n            } else if (category === \"All\") {\n                doc.ref.delete();\n            }\n        });\n    }\n\n    function handleItemAdded() {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-of-items\").doc(newId).set({\n            id: newId,\n            item_name: \"\",\n            completed: false,\n            priority: 0,\n            created: firebase.firestore.Timestamp.fromDate(new Date()),\n        })\n        return newId;\n    }\n\n    function handleListNameChanged(listId, newValue){\n        const doc = db.collection(collectionName).doc(listId);\n        doc.update({\n            list_name: newValue,\n        })\n    }\n\n    function handleListAdded(){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            list_name: \"Untitled\",\n        })\n        return newId;\n    }\n\n    function handleListDeleted(listId) {\n        db.collection(collectionName).doc(listId).delete();\n    }\n\n    // determine what list name to display in the header of the app\n    let curr_list_name = \"\";\n    if (all_lists_id.length > 0){\n        // find the information of the current list that we are displaying\n        let curr_list = all_lists_id.filter((e) => e.id === currentList);\n        if (curr_list.length > 0) {\n            curr_list_name = all_lists_id.filter((e) => e.id === currentList)[0].list_name;\n        }\n    }\n\n    return (<App data={data}\n                 list_data={all_lists_id}\n                 curr_list_id={currentList}\n                 curr_list_name={curr_list_name}\n                 onItemChanged={handleItemChanged}\n                 onItemDeleted={handleItemDeleted}\n                 onDeleteByCategory={handleItemCategoryDeleted}\n                 onItemAdded={handleItemAdded}\n                 onSortSelected={(option) => setSortOption(option)}\n                 onListSelected={setCurrentList}\n                 onListNameChanged={handleListNameChanged}\n                 onListAdded={handleListAdded}\n                 onListDeleted={handleListDeleted}\n                 selectedSortOption={sortOption}/>\n    );\n}\n\nexport default InMemoryApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from './InMemoryApp.js';\nimport reportWebVitals from './reportWebVitals.js';\n\nlet initialData = [];\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <InMemoryApp initialData={initialData} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}